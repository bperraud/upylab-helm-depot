apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-deployment
  labels:
    app: api
spec:
  replicas: 1
  selector:
    matchLabels:
      app: api
  template:
    metadata:
      labels:
        app: api
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: security
                operator: In
                values:
                - S1
            topologyKey: "kubernetes.io/hostname"

      containers:
      - name: api
        image: ryukenin/upylab_api_endpoint:latest
        env:
        - name: tempdir
          value: {{ .Values.tempdir }}
        - name: max_file_mb
          value: {{ .Values.max_file_mb | quote }}
        imagePullPolicy: Always
        ports:
        - containerPort: 3000
        volumeMounts:
        - mountPath: /tmp/compilab/
          name: filestore
      volumes:
      - name: filestore
        persistentVolumeClaim:
          claimName: filestore-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: api-service
spec:
  type: NodePort
  selector:
    app: api
  ports:
    - protocol: TCP
      port: 3000           # port: Port within the cluster where the service is available
      targetPort: 3000     # targetPort: Port on the pods where the service forwards traffic
      nodePort: 30000      # nodePort: Port exposed on each node for external access (if type is NodePort)
---
{{- if not .Values.deployFrontend.enabled }}
apiVersion: v1
kind: Service
metadata:
  name: api-loadbalancer
spec:
  type: LoadBalancer
  selector:
    app: api
  ports:
    - port: 80
      targetPort: 3000
{{- end }}
