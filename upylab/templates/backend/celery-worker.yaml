apiVersion: apps/v1
kind: Deployment
metadata:
  name: celery-worker
  labels:
    app: celery-worker
spec:
  replicas: {{ .Values.replica }}

  selector:
    matchLabels:
      app: celery-worker
  template:
    metadata:
      labels:
        app: celery-worker
    spec:
      runtimeClassName: gvisor  # run pod in gke sandbox

      {{ if .Values.seccomp_profile.enabled }}
      initContainers:
        - name: upylab-seccomp
          image: ryukenin/upylab-seccomp:new
          volumeMounts:
            - mountPath: /var/lib/kubelet/seccomp/profiles
              name: data
      {{ end }}

      containers:
      - name: celery-worker
        image: ryukenin/upylab-celery-worker:{{ .Values.python_version }}
        imagePullPolicy: Always
        env:
          - name: TIMEOUT
            value: {{ .Values.TIMEOUT | quote }}
          - name: UNSAFE_MODULES
            value: {{ .Values.UNSAFE_MODULES | quote }}
        {{ if .Values.seccomp_profile.enabled }}
        securityContext:
          seccompProfile:
            type: Localhost
            localhostProfile: profiles/config.json
        {{ end }}

        resources:
          limits:
            memory: {{ .Values.memory_limits }}
            cpu: {{ .Values.cpu_limits }}
          requests:
            memory: {{ .Values.memory_requests }}
            cpu: {{ .Values.cpu_requests }}

        livenessProbe:
          exec:
            command:
            - celery
            - -A
            - tasks
            - inspect
            - ping
          failureThreshold: 1
          initialDelaySeconds: 30
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 10

        volumeMounts:
        - mountPath: /tmp/compilab/
          name: filestore
        {{ if .Values.seccomp_profile.enabled }}
        - mountPath: /var/lib/kubelet/seccomp/profiles
          name: data
        {{ end }}

      volumes:
      {{ if .Values.seccomp_profile.enabled }}
      - name: data
        persistentVolumeClaim:
          claimName: shared-pvc
      {{ end }}
      - name: filestore
        persistentVolumeClaim:
          claimName: filestore-pvc
#---
#apiVersion: autoscaling.k8s.io/v1
#kind: VerticalPodAutoscaler
#metadata:
#  name: celery-worker-vpa
#  namespace: default
#spec:
#  targetRef:
#    apiVersion: apps/v1
#    kind: Deployment
#    name: celery-worker
#  updatePolicy:
#    updateMode: "Auto"
