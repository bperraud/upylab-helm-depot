{{ if .Values.deployFrontend.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx
  labels:
    k8s-app: front-node
    app: nginx
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: front-node
      app: nginx
  template:
    metadata:
      labels:
        k8s-app: front-node
        app: nginx
    spec:
      affinity:
        #podAntiAffinity:
        #  requiredDuringSchedulingIgnoredDuringExecution:
        #  - labelSelector:
        #      matchExpressions:
        #      - key: k8s-app
        #        operator: In
        #        values:
        #        - api-node
        #    topologyKey: "kubernetes.io/hostname"

        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: k8s-app
                operator: In
                values:
                - front-node
            topologyKey: "kubernetes.io/hostname"

      containers:
      - name: nginx
        image: ryukenin/upylab-nginx:latest
        env:
        - name: SERVER_NAME
          value: {{ .Values.site_domain }}
        - name: NGINX_ENVSUBST_OUTPUT_DIR
          value: /etc/nginx/conf.d
        ports:
        - containerPort: 80
        - containerPort: 443
        volumeMounts:
        - name: staticroot
          mountPath: /app/web/static_root
        - name: mediaroot
          mountPath: /app/web/media_root
        resources:
          requests:
            memory: {{ .Values.memory }}
            cpu: 200m
      volumes:
      - name: staticroot
        persistentVolumeClaim:
          claimName: staticroot-pvc
      - name: mediaroot
        persistentVolumeClaim:
          claimName: mediaroot-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: nginx
spec:
  type: ClusterIP
  ports:
  - name: http
    port: 80
    targetPort: 80
  - name: https
    port: 443
    targetPort: 443
  selector:
    app: nginx
{{ end }}
