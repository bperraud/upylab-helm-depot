{{ if .Values.deployFrontend.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: django-upylab
  labels:
    k8s-app: front-node
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: front-node
      app: django-upylab
  template:
    metadata:
      labels:
        k8s-app: front-node
        app: django-upylab
    spec:
      {{ toYaml .Values.front-affinity | nindent 6 }}

      initContainers:
        - name: wait-for-postgres
          image: postgres:13.3
          env:
            - name: PG_HOST
              valueFrom:
                configMapKeyRef:
                  name: db-config
                  key: DATABASE_HOST
            - name: PG_USER
              valueFrom:
                configMapKeyRef:
                  name: db-config
                  key: POSTGRES_USER
            - name: PGPASSWORD
              valueFrom:
                configMapKeyRef:
                  name: db-config
                  key: POSTGRES_PASSWORD
          command: ['sh', '-c', 'until psql -h $PG_HOST -U $PG_USER -d postgres -c "SELECT 1" >/dev/null 2>&1; do sleep 1; done;']

          resources:
            requests:
              memory: 50Mi
              cpu: 100m
            limits:
              memory: 100Mi
              cpu: 200m

      containers:
      - name: django-upylab
        image: ryukenin/upylab-pylab:latest
        #command: ["gunicorn", "pylab.wsgi:application", "--bind", "0.0.0.0:8000", "--workers=4", "--timeout=120"]
        envFrom:
          - configMapRef:
              name: db-config
        ports:
        - containerPort: 8000
        volumeMounts:
        - name: staticroot
          mountPath: /app/web/static_root
        - name: mediaroot
          mountPath: /app/web/media_root
        - name: pylab-logs
          mountPath: /var/log/pylab
      volumes:
      - name: staticroot
        persistentVolumeClaim:
          claimName: staticroot-pvc
      - name: mediaroot
        persistentVolumeClaim:
          claimName: mediaroot-pvc
      - name: pylab-logs
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: django-upylab
spec:
  type: ClusterIP
  ports:
  - port: 8000
    targetPort: 8000
  selector:
    app: django-upylab
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: staticroot-pvc
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mediaroot-pvc
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
{{ end }}
